@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Happy+Monkey&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Martian+Mono:wght@300&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200;0,300;0,400;0,500;0,700;1,800&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Bungee+Shade&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600&family=Source+Code+Pro:ital,wght@0,200;0,300;0,400;0,500;0,700;1,800&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Bungee+Inline&family=Bungee+Outline&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fredericka+the+Great&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");
@font-face {
  font-family: "Belgan";
  src: url("../public/belgan_aesthetic/BelganAesthetic.ttf") format("truetype");
}

* {
  margin: 0;
  font-family: "Montserrat", sans-serif;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.montserrat-font {
  font-family: "Montserrat", sans-serif;
}
.roboto-font {
  font-family: "Roboto Slab", serif;
}
.frederika-font {
  font-family: "Fredericka the Great", serif;
  font-weight: 400;
  font-style: normal;
}
.outlined-text {
  display: inline-block;
  overflow: hidden;
}

.outlined-text-inner {
  display: inline-block;
  font-size: 1.5rem;
  font-weight: bold;
  color: transparent;
  padding: 8px;
  background-clip: text;
  -webkit-background-clip: text;
  /* The following properties create an outlined text effect */
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,
    1px 1px 0 #000;
  transition: color 0.3s ease;
}

.outlined-text:hover .outlined-text-inner {
  color: #000; /* Change the color to fill when hovered */
}

.inline-font {
  font-family: "Bungee Inline", sans-serif;
}
.outline-font {
  font-family: "Bungee Outline", sans-serif;
}
.shade-font {
  font-family: "Bungee Shade", sans-serif;
}
.sourcecode-font {
  font-family: "Source Code Pro", monospace;
}
.happy-font {
  font-family: "Happy Monkey", cursive;
}
.martian-font {
  font-family: "Martian Mono", monospace;
}
.poppin-font {
  font-family: "Poppins", sans-serif;
}
.sub-hero {
  width: 100%;
  height: 100%;
}

.content {
  transform: translate(-50%, -50%);
  height: 200px;
  overflow: visible;
  font-size: 70px;
  line-height: 70px;
}

.content__container {
  font-weight: 600;
  overflow: hidden;
  height: 70px;
  width: 1000px;
  padding: 0 40px;
}

.content__container:before {
  content: "[";
  left: 100px;
}

.content__container:after {
  content: "]";
  right: -100px;
}

.content__container:before,
.content__container:after {
  position: absolute;
  top: 0;
  color: #16a085;
  font-size: 50px;
  line-height: 70px;
  animation-name: opacity;
  animation-duration: 2s;
  animation-iteration-count: infinite;
}

.content__container__text {
  display: inline;
  float: left;
  margin: 0;
}

.content__container__list {
  margin-top: -25px;
  padding-left: 110px;
  text-align: left;
  list-style: none;
  animation-name: change;
  animation-duration: 10s;
  animation-iteration-count: infinite;
}

.content__container__list__item {
  line-height: 70px;
  margin: 0;
}

@keyframes opacity {
  0%,
  100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

@keyframes change {
  0%,
  12.66%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  16.66%,
  29.32% {
    transform: translate3d(0, -25%, 0);
  }
  33.32%,
  45.98% {
    transform: translate3d(0, -50%, 0);
  }
  49.98%,
  62.64% {
    transform: translate3d(0, -75%, 0);
  }
  66.64%,
  79.3% {
    transform: translate3d(0, -50%, 0);
  }
  83.3%,
  95.96% {
    transform: translate3d(0, -25%, 0);
  }
}

/* Add these styles to your existing Tailwind CSS file or create a new one */

.masonry-grid {
  display: flex;
  width: auto;
  flex-wrap: wrap;
}

.masonry-grid-column {
  background-clip: padding-box;
}

.masonry-grid-item {
  margin: 4px; /* Adjust as needed based on your design */
  width: 100%;
}

.theme {
  --transition-duration: 400ms;
  --text: #333;
}

.theme.dark {
  --text: white;
}
.name {
  @apply m-6; /* Adjust the margin value based on your needs */
  text-shadow: 0 1px 0 #ccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbb, 0 4px 0 #b9b9b9,
    0 5px 0 #aaa, 0 6px 1px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.3),
    0 3px 5px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.25),
    0 10px 10px rgba(0, 0, 0, 0.2), 0 20px 20px rgba(0, 0, 0, 0.15),
    0 30px 20px rgba(0, 0, 0, 0.1);
}

.theme {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text);
  transition: color, background-color var(--transition-duration);
}

.theme svg {
  transition: stroke var(--transition-duration);
  stroke: var(--text);
}

.theme .moon-icon {
  stroke-dasharray: 0px 1px;
  opacity: 0;
  transition: stroke-dasharray 0.5s ease-in, opacity 300ms ease-in;
}

.theme .sun-icon {
  stroke-dasharray: 1px 1px;
  opacity: 1;
  transition: stroke-dasharray 0.5s ease-in, opacity 300ms ease-in;
}

.theme.dark .moon-icon {
  stroke-dasharray: 1px 1px;
  opacity: 1;
}

.theme.dark .sun-icon {
  stroke-dasharray: 0px 1px;
  opacity: 0;
}
.fill {
  margin: 20px auto;
  width: fit-content;
  text-align: center;
  font-size: 140px;
  -webkit-text-fill-color: white;
  -webkit-text-stroke: 1px black;
  position: relative;
  cursor: pointer;
}
.fill::before {
  position: absolute;
  content: attr(data-text);
  top: 0;
  left: 0px;
  -webkit-text-fill-color: #34e7e4;
  width: 0;
  overflow: hidden;
  transition: 0.5s;
}
.fill:hover::before {
  width: 100%;
}


/* mesh css */
.shape1 {
  animation: one 10s infinite;
}
.shape2 {
  animation: two 10s infinite;
}

@keyframes one {
  0% {
    left: 0px;
    top: 0px;
  }
  25% {
    left: -100px;
    top: 70px;
  }
  50% {
    left: 20px;
    top: 150px;
  }
  75% {
    left: 50px;
    top: 100px;
  }
  100% {
    left: 0px;
    top: 0px;
  }
}
@keyframes two {
  0% {
    left: 0px;
    top: 0px;
  }
  25% {
    left: 50px;
    top: 10px;
  }
  50% {
    left: 100px;
    top: 50px;
  }
  75% {
    left: 50px;
    top: 100px;
  }
  100% {
    left: 0px;
    top: 0px;
  }
}
.bg-blur {
  filter: blur(90px);
}
/* #text outlined */
.text-outline {
  -webkit-text-fill-color: transparent;
  -webkit-text-stroke-color: currentColor;
  -webkit-text-stroke-width: 0.012em;
}

.text-outline-hover {
  position: relative;
}

.text-outline-hover::before {
  position: absolute;
  top: 0;
  left: 0;
  max-width: 0;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  content: attr(data-text);
  transition: max-width cubic-bezier(0.22, 0.61, 0.36, 1);
  -webkit-text-fill-color: currentColor;
}

.text-outline-hover:hover::before {
  max-width: 100%;
}

/* #bubbles css */


.text-container {
  z-index: 100;
  width: 100vw;
  height: 100vh;
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  justify-content: center;
  align-items: center;
  font-size: 96px;
  color: white;
  opacity: 0.8;
  user-select: none;
  text-shadow: 1px 1px rgba(0, 0, 0, 0.1);
}

:root {
  --color-bg1: rgb(108, 0, 162);
  --color-bg2: rgb(0, 17, 82);
  --color1: 18, 113, 255;
  --color2: 221, 74, 255;
  --color3: 100, 220, 255;
  --color4: 200, 50, 50;
  --color5: 180, 180, 50;
  --color-interactive: 140, 100, 255;
  --circle-size: 80%;
  --blending: hard-light;
}

@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}

.gradient-bg {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
  top: 0;
  left: 0;
}

.gradient-bg svg {
  display: none;
}

.gradient-bg .gradients-container {
  filter: url(#goo) blur(40px);
  width: 100%;
  height: 100%;
}

.gradient-bg .g1 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color1), 0.8) 0,
      rgba(var(--color1), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);
  transform-origin: center center;
  animation: moveVertical 30s ease infinite;
  opacity: 1;
}

.gradient-bg .g2 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color2), 0.8) 0,
      rgba(var(--color2), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);
  transform-origin: calc(50% - 400px);
  animation: moveInCircle 20s reverse infinite;
  opacity: 1;
}

.gradient-bg .g3 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color3), 0.8) 0,
      rgba(var(--color3), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2 + 200px);
  left: calc(50% - var(--circle-size) / 2 - 500px);
  transform-origin: calc(50% + 400px);
  animation: moveInCircle 40s linear infinite;
  opacity: 1;
}

.gradient-bg .g4 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color4), 0.8) 0,
      rgba(var(--color4), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);
  transform-origin: calc(50% - 200px);
  animation: moveHorizontal 40s ease infinite;
  opacity: 0.7;
}

.gradient-bg .g5 {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color5), 0.8) 0,
      rgba(var(--color5), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: calc(var(--circle-size) * 2);
  height: calc(var(--circle-size) * 2);
  top: calc(50% - var(--circle-size));
  left: calc(50% - var(--circle-size));
  transform-origin: calc(50% - 800px) calc(50% + 200px);
  animation: moveInCircle 20s ease infinite;
  opacity: 1;
}

.gradient-bg .interactive {
  position: absolute;
  background: radial-gradient(
      circle at center,
      rgba(var(--color-interactive), 0.8) 0,
      rgba(var(--color-interactive), 0) 50%
    )
    no-repeat;
  mix-blend-mode: var(--blending);
  width: 100%;
  height: 100%;
  top: -50%;
  left: -50%;
  opacity: 0.7;
}
/* #marque */
.marquee-container {
  overflow: hidden;
  white-space: nowrap;
}

.marquee-text {
  display: inline-block;
  animation: marquee 40s linear infinite;
}

.marquee-text2 {
  display: inline-block;
  animation: marquee2 40s linear infinite;
  animation-delay: 20s;
}

@keyframes marquee {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes marquee2 {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(-200%);
  }
}

/* #text-rotation */

.circle {
  position: relative;
  width: 200px;
  height: 200px;
  border-radius: 100vmax;
  display: flex;
  align-items: center;
  justify-content: center;
}

.text {
  position: absolute;
  width: 100%;
  height: 100%;
  animation: textRotation 8s linear infinite;
}

@keyframes textRotation {
  to {
    transform: rotate(360deg);
  }
}

.text span {
  position: absolute;
  left: 50%;
  transform-origin: 0 100px;
}
/* You can add this CSS in your stylesheets or use it directly in your JSX component as a style object */


.container {
  min-height: 100vh;
  min-width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  margin: 0; /* Remove default margin to ensure full-screen appearance */
}

.blobcard {
  width: 100vw;
  height: 100vh;
  box-shadow: 0 7px 30px -10px rgba(150, 170, 180, 0.5);
  border-radius: 1rem; /* You can adjust the border-radius as needed */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
}

.blobcard > .blob {
  height: 40%;
  width: 20%;
  border-radius: 100%;
  filter: blur(15px);
  position: absolute;
}
/* Add other Tailwind CSS classes as needed for your specific styling requirements */
